@import 'partials/colors';
@import 'partials/variables';

@mixin checkbox-size($size) {
    $map: (
        "sm": (width: 16px, height: 16px, font-size: 0.875rem),
        "md": (width: 20px, height: 20px, font-size: 0.875rem),
        "lg": (width: 24px, height: 24px, font-size: 1rem)
    );
    
    $props: map-get($map, $size);
    width: map-get($props, width);
    height: map-get($props, height);
    font-size: map-get($props, font-size);
}

.q-checkbox-root {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;

    .q-checkbox-container {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        cursor: pointer;
        width: fit-content;
    }

    .q-checkbox-input {
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        display: flex;
        align-items: center;
        justify-content: center;
        position: relative;
        margin: 0;
        padding: 0;
        border-radius: 4px;
        background-color: var(--#{$prefix}surface-bg);
        border: 2px solid var(--#{$prefix}border-color);
        cursor: pointer;
        transition: all 0.2s ease-in-out;
        flex-shrink: 0;

        // Sizes
        @each $size in sm, md, lg {
            &[data-size="#{$size}"] {
                @include checkbox-size($size);
            }
        }

        // Checkmark
        &:not(:indeterminate)::after {
            content: "";
            background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"%3E%3Cpolyline points="20 6 9 17 4 12"%3E%3C/polyline%3E%3C/svg%3E');
            background-size: cover;
            background-repeat: no-repeat;
            width: 100%;
            height: 100%;
        }

        // Indeterminate state
        &:indeterminate {
            @each $name, $color in $colors {
                &[data-color="#{$name}"] {
                    background-color: var(--#{$prefix}color-#{$name});
                    border-color: var(--#{$prefix}color-#{$name});
                }
            }

            &::after {
               content: "";
                background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="3" stroke-linecap="round" stroke-linejoin="round"%3E%3Cline x1="5" y1="12" x2="19" y2="12"%3E%3C/line%3E%3C/svg%3E');
                background-size: cover;
                background-repeat: no-repeat;
                width: 100%;
                height: 100%;

            }
        }

        // Checked state
        &:checked {
            @each $name, $color in $colors {
                &[data-color="#{$name}"] {
                    background-color: var(--#{$prefix}color-#{$name});
                    border-color: var(--#{$prefix}color-#{$name});
                }
            }

            &::after {
                display: block;
            }
        }

        // Hover state
        &:hover:not(:disabled) {
            border-color: var(--#{$prefix}color-primary);
            box-shadow: 0 0 0 3px var(--#{$prefix}color-primary-light);
        }

        // Focus state
        &:focus {
            outline: none;
            border-color: var(--#{$prefix}color-primary);
            box-shadow: 0 0 0 3px var(--#{$prefix}color-primary-light);
        }

        // Disabled state
        &:disabled {
            cursor: not-allowed;
            opacity: 0.5;
            background-color: var(--#{$prefix}disabled);
            border-color: var(--#{$prefix}disabled);

            &:checked {
                background-color: var(--#{$prefix}disabled);
                border-color: var(--#{$prefix}disabled);
            }
        }
    }

    .q-checkbox-label {
        cursor: pointer;
        color: var(--#{$prefix}color);
        font-weight: 500;
        line-height: 1.5;
        user-select: none;
        transition: color 0.2s ease-in-out;
    }

    .q-checkbox-help {
        margin-left: 2rem;
        display: flex;
        flex-direction: column;
        gap: 0.25rem;
    }

    .q-help-text {
        font-size: 0.75rem;
        color: var(--#{$prefix}text-muted);
        line-height: 1.4;
    }

    .q-error-text {
        font-size: 0.75rem;
        color: var(--#{$prefix}color-danger);
        line-height: 1.4;
    }

    // Error state
    &.q-checkbox-error {
        .q-checkbox-input {
            border-color: var(--#{$prefix}color-danger);
            
            &:hover:not(:disabled) {
                border-color: var(--#{$prefix}color-danger);
                box-shadow: 0 0 0 3px var(--#{$prefix}color-danger-light);
            }

            &:focus {
                border-color: var(--#{$prefix}color-danger);
                box-shadow: 0 0 0 3px var(--#{$prefix}color-danger-light);
            }
        }
    }

    // Disabled state
    &.q-checkbox-disabled {
        .q-checkbox-label {
            cursor: not-allowed;
            opacity: 0.5;
        }
    }
}
