@import "partials/colors";
@import "partials/variables";

@keyframes pingAnimation {
    75%, 100% {
        transform: scale(2);
        opacity: 0;
    }
}

@mixin badge-size($size) {
    $map: (
        "xs": (font-size: 0.625rem, padding: 0.125rem 0.375rem, height: 16px),
        "sm": (font-size: 0.75rem, padding: 0.25rem 0.5rem, height: 20px),
        "md": (font-size: 0.875rem, padding: 0.375rem 0.75rem, height: 24px),
        "lg": (font-size: 1rem, padding: 0.5rem 1rem, height: 28px)
    );
    
    $props: map-get($map, $size);
    font-size: map-get($props, font-size);
    padding: map-get($props, padding);
    min-height: map-get($props, height);
}

.q-badge {
    position: relative;
    width: fit-content;
    display: inline-block;

    > span {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        font-weight: 600;
        text-align: center;
        line-height: 1;
        letter-spacing: 0.025em;
        border-radius: 6px;
        transition: all 0.2s ease-in-out;
        white-space: nowrap;
        box-sizing: border-box;
        
        // Sizes
        @each $size in xs, sm, md, lg {
            &[data-size="#{$size}"] {
                @include badge-size($size);
            }
        }

        // Color variants
        @each $name, $color in $colors {
            &[data-color="#{$name}"] {
                &[data-variant="solid"] {
                    background-color: var(--#{$prefix}color-#{$name});
                    color: white;
                    border: 1px solid var(--#{$prefix}color-#{$name});
                }
                
                &[data-variant="outline"] {
                    background-color: transparent;
                    border: 1px solid var(--#{$prefix}color-#{$name});
                    color: var(--#{$prefix}color-#{$name});
                }
                
                &[data-variant="soft"] {
                    background-color: var(--#{$prefix}color-#{$name}-light);
                    color: var(--#{$prefix}color-#{$name});
                    border: 1px solid transparent;
                }
                
                &[data-variant="ghost"] {
                    background-color: transparent;
                    color: var(--#{$prefix}color-#{$name});
                    border: 1px solid transparent;
                    
                    &:hover {
                        background-color: var(--#{$prefix}color-#{$name}-light);
                    }
                }
            }
        }
        
        &.q-badge-dot {
            padding: 0;
            border-radius: 50%;
            border: none;
            
            &[data-size="xs"] { 
                width: 6px; 
                height: 6px; 
                min-height: 6px; 
            }
            &[data-size="sm"] { 
                width: 8px; 
                height: 8px; 
                min-height: 8px; 
            }
            &[data-size="md"] { 
                width: 10px; 
                height: 10px; 
                min-height: 10px; 
            }
            &[data-size="lg"] { 
                width: 12px; 
                height: 12px; 
                min-height: 12px; 
            }
        }
    
        &.q-dot-floating {
            position: absolute;
            top: -8%;
            right: -8%;
            z-index: 10;
            box-shadow: 0 0 0 2px var(--#{$prefix}surface-bg);
        }
    
        &.q-badge-animated {
            // Para dots animados, necesitamos un contenedor relativo
            position: relative;
            
            &::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background-color: inherit;
                border-radius: inherit;
                animation: pingAnimation 1s cubic-bezier(0, 0, 0.2, 1) infinite;
                opacity: 0.75;
            }
            
            // El dot principal debe estar encima de la animaci√≥n
            position: relative;
            z-index: 1;
        }
    
        &.q-badge-pill {
            border-radius: 9999px;
        }
        
        // Hover effects for interactive badges
        &:not(.q-badge-dot):hover {
            transform: translateY(-1px);
            box-shadow: var(--#{$prefix}shadow);
        }
    }
}
